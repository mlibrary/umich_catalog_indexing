#!/bin/bash

# Need at least three arguments:
#  - the environment (ht or umich)
#  - the name of the writer (ht_localhost, debug, etc.)
#  - the name of the file
#  - (optional) the logfile

# Turn off invokedynamic 

#
if [[ $# -lt 2 ]] || [[ $# -gt 3 ]]
then
  echo
  echo "tindex: Use traject to index"
  echo "USAGE:"
  echo "  tindex writer filename [logfile]"
  echo
  echo "...where"
  echo "  - 'writer' is the name of the writer config (in ht_traject/writers/, without the 'rb')"
  echo "  - 'filename' is the name of the file of MARC records or a (quoted!) filesystem glob for many files"
  echo "  - 'logfile' is the name of the log file"
  echo 
  echo "You can set the environment variable READER to the name of the reader config file (without"
  echo "the .rb) if you want to override whatever is normally used (ndj for HT, alephsequential for UM)"
  echo
  exit 1
fi


HERE=`dirname $0`
SCRIPTDIR=`realpath $HERE`

export JRUBY_OPTS="--server -J-Xmx2048m -Xcompile.invokedynamic=true -J-Djava.io.tmpdir=$HERE/logs
                   -J-Dmaven.repo.local=/l/solr-vufind/.mvn"
export TMPDIR="${HERE}/logs"

#READER=alephsequential
#READER=xml
READER=multim4j
WRITER=$1

filename_glob=$2

logfile=$3
[[ ! -z "$logfile" ]] && logfile=`realpath "$logfile"`

# Better double-check to make sure we're not going to append our log stuff
# to an xml file, which would happen if the caller forgets to quote
# the glob

if [[ "${logfile}" =~ .xml$ ]]; then
  echo "Logfile is $logfile"
  echo "Logfile (argument 3) seems to have an xml extension"
  echo "Did you forget to quote the filename glob, resulting in"
  echo "command-line expansion of filenames?"
  exit 1
fi

# Pull in functions to find marc/del files
source $SCRIPTDIR/utils.sh

export SOLR_URL=`solr_url`

JRUBY=`which ruby`
jruby_path=`jruby_bin_dir`
if [ ${jruby_path} ] # this has a value when not using docker
then
  export PATH=$jruby_path:$PATH
  JRUBY="${jruby_path}/jruby"
fi



TDIR=`realpath $SCRIPTDIR/..`
if [ ! -f $TDIR/writers/$WRITER.rb ]
then
  log "Can't find writer $WRITER.rb at $TDIR/writers/$WRITER.rb" $logfile
  exit 1
fi


if [ ! -f $filename ]
then
  log "Can't find file $filename"  $logfile
  exit 1
fi

cd $TDIR

# Update the tmaps
log "Getting collection map" $logfile
# $JRUBY -S bundle exec $SCRIPTDIR/get_collection_map.rb

#update libLocInfo.yaml
#load environment variables
if [ -f .env ]
then
  export $(cat .env | sed 's/#.*//g' | xargs)
fi
log "Updating libLocInfo.yaml"
output=$(bundle exec $JRUBY bin/lib_loc_info.rb --path ./lib/translation_maps/umich/libLocInfo.yaml)
log "${output}"

log "Indexing from ${filename_glob} with reader $READER into $WRITER ($SOLR_URL)" $logfile

cmd="bundle exec traject 
  -c $TDIR/readers/$READER.rb 
  -c $TDIR/writers/$WRITER.rb 
  -c $TDIR/indexers/common.rb 
  -c $TDIR/indexers/common_ht.rb
  -c $TDIR/indexers/subject_topic.rb
  -c $TDIR/indexers/umich.rb
  -c $TDIR/indexers/umich_callnumbers.rb
  -c $TDIR/indexers/umich_alma.rb 
  -s source_glob="${filename_glob}"
  -s log.file=STDOUT 
  $filename"

if [[ -z $logfile ]]; then
    $cmd
else
    $cmd >> $logfile 2>&1
fi
  
exit $?  
